/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as LibraryRouteRouteImport } from './routes/library/route';
import { Route as FavouritesRouteRouteImport } from './routes/favourites/route';
import { Route as ExploreRouteRouteImport } from './routes/explore/route';
import { Route as IndexRouteImport } from './routes/index';

const LibraryRouteRoute = LibraryRouteRouteImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => rootRouteImport,
} as any);
const FavouritesRouteRoute = FavouritesRouteRouteImport.update({
  id: '/favourites',
  path: '/favourites',
  getParentRoute: () => rootRouteImport,
} as any);
const ExploreRouteRoute = ExploreRouteRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/explore': typeof ExploreRouteRoute;
  '/favourites': typeof FavouritesRouteRoute;
  '/library': typeof LibraryRouteRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/explore': typeof ExploreRouteRoute;
  '/favourites': typeof FavouritesRouteRoute;
  '/library': typeof LibraryRouteRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/explore': typeof ExploreRouteRoute;
  '/favourites': typeof FavouritesRouteRoute;
  '/library': typeof LibraryRouteRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/explore' | '/favourites' | '/library';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/explore' | '/favourites' | '/library';
  id: '__root__' | '/' | '/explore' | '/favourites' | '/library';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ExploreRouteRoute: typeof ExploreRouteRoute;
  FavouritesRouteRoute: typeof FavouritesRouteRoute;
  LibraryRouteRoute: typeof LibraryRouteRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/library': {
      id: '/library';
      path: '/library';
      fullPath: '/library';
      preLoaderRoute: typeof LibraryRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/favourites': {
      id: '/favourites';
      path: '/favourites';
      fullPath: '/favourites';
      preLoaderRoute: typeof FavouritesRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/explore': {
      id: '/explore';
      path: '/explore';
      fullPath: '/explore';
      preLoaderRoute: typeof ExploreRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreRouteRoute: ExploreRouteRoute,
  FavouritesRouteRoute: FavouritesRouteRoute,
  LibraryRouteRoute: LibraryRouteRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
